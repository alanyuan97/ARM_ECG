#include <iostream>  //for inputs and outputs

using namespace std;

int main()    //this produces one layer, perhaps I could find a way to do all the layers
{
    int outputs=10; //change this for no outputs
    int inputs=5; //change this for no inputs
    cout<<"module layer_2(reset,clk,";  //change the layer number layer_x
    for(int i=1; i<outputs+1; i++){   //outputs
   cout <<"N"<<i<<"x,";
   }
   for(int j=0; j<inputs; j++){  //inputs
   cout <<"R"<<j<<"x";
    if(j!=inputs-1){
        cout<<",";
        }
    else{
        cout<<");";
        }
   }
    cout<<"\n";
    cout<<"input reset; \n";
    cout<<"input clk; \n";
    cout<<"output [7:0] ";
   for(int i=1; i<outputs+1; i++){   //outputs
   cout <<"N"<<i<<"x";
   if(i!=outputs){
        cout<<",";
        }
    else{
        cout<<";";
        }
   }
   cout<<"\n";
   cout<<"input [7:0]";
   for(int j=0; j<inputs; j++){  //inputs
   cout <<"R"<<j<<"x";
   if(j!=inputs-1){
        cout<<",";
        }
    else{
        cout<<";";
        }
   }
   cout<<"\n";
   cout<<"\n";
   for(int i=1; i<outputs; i++){    //outputs/neurons
   cout << "node1_" <<i<<" node1_"<<i<<"( \n";
   for(int j=0; j<inputs; j++){   //inputs
    cout<<".A"<<j<<"x(R"<<j<<"x), \n";
   }
   cout<<".clk(clk), \n";
   cout<<".reset(reset), \n";
   cout<<".N"<<i<<"x(N"<<i<<"x) \n";
   cout<<"); \n";
   }
   cout<<"endmodule";
   
}